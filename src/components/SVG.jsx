/* global tw */
import React from 'react';
import PropTypes from 'prop-types';
import styled from 'react-emotion';
import { width as twWidth } from '../../tailwind';

const Wrapper = styled.svg`
  ${tw('stroke-current absolute')};
  color: ${props => props.stroke};
  width: ${props => props.svgWidth};
  fill: ${props => props.fill};
  left: ${props => props.left};
  top: ${props => props.top};
`;

const icons = {
  triangle: {
    shape: (
      <polygon
        strokeWidth="1px"
        strokeLinejoin="round"
        strokeMiterlimit="10"
        points="14.921,2.27 28.667,25.5 1.175,25.5 "
      />
    ),
    viewBox: '0 0 30 30',
  },
  circle: {
    shape: (
      <path d="M15,30A15,15,0,1,1,30,15,15,15,0,0,1,15,30ZM15,6.23A8.77,8.77,0,1,0,23.77,15,8.77,8.77,0,0,0,15,6.23Z" />
    ),
    viewBox: '0 0 30 30',
  },
  scrollLine: {
    shape: (
      <path d="M300,161.16 L300,232.58 L300,326.1766666666667C300,342.84333333333336 200,342.84333333333336 200,359.51 C200,360.02 300,360.02 300,360.53 L300,566.63 L300,594.08 L300,650.37 L300,723.46 L300,864.01 L300,879.88 L300,1138.35 L300,1158.8 L300,1220.25 L300,1489.94 L300,1583.51 L300,1627.55 L300,1739.97 L300,1800.63 L300,1885.21 L300,1979.47 L300,2057.81 C300,2058.69 150,2058.69 150,2059.57 C150,2078.525 300,2078.525 300,2097.48 L300,2152.41 L300,2152.46 L300,2157.54 L300,2157.56 L300,2174.22 L300,2188.61 L300,2213.54 L300,2231.43 L300,2252 C300,2263.665 200,2263.665 200,2275.33 C200,2283.34 300,2283.34 300,2291.35 L300,2319.71 L300,2328.22 L300,2345.74 C300,2345.825 250,2345.825 250,2345.91 C250,2356.76 300,2356.76 300,2367.61 L300,2409.25 L300,2429.13 L300,2447.6 L300,2467.67 L300,2473.07 C300,2473.1549999999997 200,2473.1549999999997 200,2473.24 C200,2479.3549999999996 300,2479.3549999999996 300,2485.47 L300,2528.83 L300,2664.08 L300,2664.16 C300,2664.955 250,2664.955 250,2665.75 C250,2673.665 300,2673.665 300,2681.58 C300,2682.2799999999997 250,2682.2799999999997 250,2682.98 L250,2683.03 C250,2693.04 300,2693.04 300,2703.05 C300,2705.4 250,2705.4 250,2707.75 C250,2713.75 300,2713.75 300,2719.75 L300,2725.5 C300,2726.545 250,2726.545 250,2727.59 C250,2734.755 300,2734.755 300,2741.92 C300,2749.9700000000003 250,2749.9700000000003 250,2758.02 C250,2758.45 300,2758.45 300,2758.88 L300,2766 C300,2767.26 250,2767.26 250,2768.52 C250,2775.185 300,2775.185 300,2781.85 C300,2782.675 250,2782.675 250,2783.5 C250,2787.06 300,2787.06 300,2790.62 L300,2797.6 L300,2803.05 L300,2822.51 L300,2842.45 L300,2859.41 C300,2860.62 250,2860.62 250,2861.83 L250,2861.9 C250,2870.005 300,2870.005 300,2878.11 L300,2899.3 L300,2899.39 C300,2899.7749999999996 150,2899.7749999999996 150,2900.16 C150,2907.635 300,2907.635 300,2915.11 L300,2954.28 L300,2963.22 L300,2993.16 L300,3024.93 L300,3034.73 L300,3053.71 C300,3081.1800000000003 100,3081.1800000000003 100,3108.65 C100,3108.715 300,3108.715 300,3108.78 C300,3139.4 100,3139.4 100,3170.02 C100,3186.6866666666665 300,3186.6866666666665 300,3203.3533333333335L300,3307.02 L300,3347 C300,3366.92 100,3366.92 100,3386.84 C100,3387.5950000000003 300,3387.5950000000003 300,3388.35 L300,3392.8 L300,3409.08 C300,3445.685 200,3445.685 200,3482.29 C200,3486.175 300,3486.175 300,3490.06 C300,3490.0699999999997 100,3490.0699999999997 100,3490.08 C100,3505.69 300,3505.69 300,3521.3 L300,3525.8 L300,3527.47 C300,3527.59 100,3527.59 100,3527.71 C100,3544.376666666667 300,3544.376666666667 300,3561.0433333333335L300,3752.5166666666664C300,3769.1833333333334 350,3769.1833333333334 350,3785.85 C350,3801.4449999999997 300,3801.4449999999997 300,3817.04 C300,3848.33 100,3848.33 100,3879.62 C100,3896.286666666667 300,3896.286666666667 300,3912.9533333333334L300,3990.06 C300,3992.225 100,3992.225 100,3994.39 C100,4013.835 300,4013.835 300,4033.28 C300,4036.6400000000003 150,4036.6400000000003 150,4040 C150,4056.666666666667 300,4056.666666666667 300,4073.3333333333335L300,4168.39 L300,4203.66 L300,4309.47 L300,4355.49 L300,4438.63 L300,4501.4 L300,4527.18 L300,4527.24 L300,4527.32 L300,4705.31 C300,4747.6900000000005 200,4747.6900000000005 200,4790.07 C200,4790.12 300,4790.12 300,4790.17 L300,4831.58 L300,4909.79 L300,4978.06 L300,5024.68 L300,5341.95 L300,5404.04 L300,5707.09 L300,5846.84 L300,5918.93 L300,5956.66 L300,6008.86 L300,6032.41 L300,6074.86 L300,6160.47 L300,6494.77 L300,6544.9 L300,6554.59 L300,6572.89 L300,6620.47 L300,6628.18 L300,6651.49 L300,6690.64 L300,6734.86 L300,6784.42 L300,6897.47 C300,6938.1849999999995 50,6938.1849999999995 50,6978.9 C50,7016.18 300,7016.18 300,7053.46 L300,7064.33 L300,7081.25 C300,7125.469999999999 200,7125.469999999999 200,7169.69 C200,7169.75 300,7169.75 300,7169.81 L300,7209.83 L300,7258.2 C300,7305.305 100,7305.305 100,7352.41 C100,7358.835 300,7358.835 300,7365.26 L300,7437.33 L300,7556.63 L300,7589.71 L300,7626.93 L300,7649.84 L300,7666.02 L300,7689.28 L300,7705.31 L300,7727.3 L300,7744.38 L300,7766.83 L300,7817.81 L300,7862.84 C300,7872.735000000001 400,7872.735000000001 400,7882.63 C400,7899.296666666667 300,7899.296666666667 300,7915.963333333333L300,8036.55 L300,8192.58 L300,8419.56 L300,8566.87 L300,8667.14 L300,8780.15 L300,8784.1 L300,8827.76 L300,8855.53 L300,8890.78 L300,8939.6 L300,8997.51 L300,9169.01 L300,9314.37 L300,9399.17 L300,9594.91 L300,9723.226666666666C300,9739.893333333333 500,9739.893333333333 500,9756.56 C500,9773.226666666666 300,9773.226666666666 300,9789.893333333333L300,10075.686666666666C300,10092.353333333333 200,10092.353333333333 200,10109.02" />
    ),
    viewBox: '0 0 30 30',
  },
  arrowUp: {
    shape: (
      <React.Fragment>
        <path d="M28.74,20.81H1.26a1.26,1.26,0,0,1-1-2L14.16.5a1.25,1.25,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,18.8a1.25,1.25,0,0,1-1,2ZM3.81,18.29H26.22L15.16,3.37Z" />{' '}
        <path d="M28.74,42H1.26a1.28,1.28,0,0,1-1.13-.71A1.26,1.26,0,0,1,.26,40l13.9-18.29a1.28,1.28,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,40a1.26,1.26,0,0,1,.12,1.32A1.28,1.28,0,0,1,28.74,42ZM3.81,39.47H26.22L15.16,24.55Z" />
      </React.Fragment>
    ),
    viewBox: '0 0 30 42',
  },
  upDown: {
    shape: (
      <React.Fragment>
        <path d="M28.74,44.58a1.28,1.28,0,0,1-1-.51L15.16,27.13l-12.89,17a1.26,1.26,0,1,1-2-1.53l13.9-18.29a1.34,1.34,0,0,1,1-.5,1.24,1.24,0,0,1,1,.51L29.75,42.56a1.27,1.27,0,0,1-1,2Z" />
        <path d="M14.83,20.82h0a1.28,1.28,0,0,1-1-.52L.25,2a1.27,1.27,0,0,1,2-1.51L14.84,17.45,27.73.5a1.26,1.26,0,0,1,2,1.53L15.84,20.32A1.28,1.28,0,0,1,14.83,20.82Z" />
      </React.Fragment>
    ),
    viewBox: '0 0 30 44.58',
  },
  box: {
    shape: (
      <path d="M28,2V28H2V2H28m.13-2H1.88A1.88,1.88,0,0,0,0,1.88V28.13A1.88,1.88,0,0,0,1.88,30H28.13A1.87,1.87,0,0,0,30,28.13V1.88A1.88,1.88,0,0,0,28.13,0Z" />
    ),
    viewBox: '0 0 30 30',
  },
  hexa: {
    shape: (
      <polygon
        strokeLinejoin="round"
        strokeMiterlimit="10"
        points="27.5,21.904 15,28.809  2.5,21.904 2.5,8.095 15,1.19 27.5,8.095 "
      />
    ),
    viewBox: '0 0 30 30',
  },
};

const SVG = ({ stroke, fill, width, icon, left, top, className }) => (
  <Wrapper
    viewBox={icons[icon].viewBox}
    stroke={stroke}
    fill={fill}
    svgWidth={twWidth[`${width}`]}
    left={left}
    top={top}
    className={className}
  >
    {icons[icon].shape}
  </Wrapper>
);

export default SVG;

SVG.propTypes = {
  stroke: PropTypes.string,
  fill: PropTypes.string,
  width: PropTypes.number,
  icon: PropTypes.oneOf(['triangle', 'circle', 'arrowUp', 'upDown', 'box', 'hexa']).isRequired,
  left: PropTypes.string,
  top: PropTypes.string,
  className: PropTypes.string,
};

SVG.defaultProps = {
  stroke: 'transparent',
  width: 8,
  fill: 'none',
  left: '0%',
  top: '0%',
  className: 'fancy-icon',
};
